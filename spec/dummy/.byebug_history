continue
payment_source_class.find(source.transaction_id).state
payment_source_class.find(source.transaction_id)
payment_source_class.find(source.transaction_id)[:state]
payment_source_class.find(source.transaction_id)
payment_source_class
display source.transaction_id
display source
n
paypal_checkout
n
paypal_checkout
continue
n
params[:paymentId]
params[:id]
params[:paymentId]
params
continue
display source
display amount
n
continue
n
next
continue
n
continue
n
continue
n
continue
n
continue
n
continue
n
continue
next
continue
next
params
continue
n
continue
next
continue
response.status
response.state
response
display params
continue
payment_options[:transactions]
continue
payment_options[:transactions]
payment_options
continue
payment_options[:transactions]
payment_options
continue
payment_options[:transactions]
payment_options
continue
payment_options
continue
get_list.nil?
get_list.empty?
get_list
delete_profile("XP-N8ST-8773-QHW6-TPZK")
get_list.first.id
get_list
delete_profile("XP-HXBC-VWKD-6XL3-4KZC")
get_list.first.id
get_list.count
get_list
continue
get_list.count
delete_profile("XP-HPMQ-KGWU-W7JS-JUWJ")
get_list.first.id
get_list.first
get_list.count
get_list.first
get_list
continue
delete_profile("XP-HPMQ-KGWU-W7JS-JUWJ")
get_list.first.id
get_list.count
get_list
continue
get_list.first.id
get_list.first
get_list.nil?
continue
options[:brand_name]
display options
continue
payment_options
next
continue
profile.nil?
profile.id
profile.first
profile
next
profile.nil
profile.nil?
step
profiles
step
profile
continue
payment_options
continue
payment_options
continue
payment_options
continue
payment_options
continue
payment_options
continue
payment_options
continue
payment_options[:transactions][:item_list][items][0]
payment_options
continue
@payment.inspect
@payment.methods
continue
next
quit
preferred_client_secret
preferred_client_id
next
continue
next
continue
preferred_client_id
continue
preferred_server
preferred_client_id
parent
self.parent
self.super
super
self.parent
super.preferred_server
quit
self.preferred_client_id
self.methods.grep(/preferred/)
self.methods
preferred_client_id
Gateway::PaypalRestBase.preferred_client_id
preferred_client_secret
preferred_client_id
preferred_client
preferred_client_id
preferred_server
continue
Spree::Core::Engine.routes.url_helpers.methods.grep(/paypal/)
Spree::Core::Engine.routes.url_helpers.methods.grep(/order/)
Spree::Core::Engine.routes.url_helpers.methods
Spree::Core::Engine.routes.url_helpers
Spree::Core::Engine.routes
continue
next
s
continue
checkout_state_path(@order.state)
checkout_state_path
@order.state
@order
next
continue
next
request.headers.env
request.env.headers
next
continue
next
params
permitted_checkout_attributes
request
next
quit
next
request.headers.env
continue
next
continue
s
continue
step
quit
@order.payments.where(source_type: 'Spree::PaypalRestCheckout').present?
@order
display params
continue
params
@order.payments.count
@order.payments
@order.payment
display @order
continue
next
step
next
source_attributes
next
continue
conitnue
next
continue
next
continue
conitnue
next
continue
next
continue
next
payment_method.class.name
payment_method.class
payment_method.klass
payment_method.class_name
payment_method.class
payment_method
payment_method.source_required?
next
continue
next
continue
next
continue
payment_method
payment_method.source_required?
payment_method.source_required
payment_method.source
payment_method
payment_method.source
next
continue
next
source_attributes
next
continue
next
display source
next
continue
next
display source
source
next
continue
next
